name: Reusable build workflow

on:
  workflow_call:
    inputs:
      runner:
        required: true
        type: string
      service:
        required: true
        type: string
    secrets:
      DOCKER_KEY:
        required: true

jobs:
  build:
    runs-on: ${{ inputs.runner }}
    timeout-minutes: 120
    name: Build and push to DockerHub
    steps:
      # Install dependencies for ubuntu-latest
      - name: System Setup
        if: inputs.runner == 'ubuntu-latest'
        run: |
          sudo apt-get update && sudo apt-get upgrade -y
          sudo apt-get install -y docker.io
          sudo systemctl start docker
          sudo systemctl enable docker

      # Setup for self-hosted
      - name: Setup Swap
        if: inputs.runner == 'self-hosted'
        shell: bash
        run: |
          sudo swapoff /mnt/swapfile || true
          sudo rm -v /mnt/swapfile || true
          sudo fallocate -l 13G /mnt/swapfile
          sudo chmod 600 /mnt/swapfile
          sudo mkswap /mnt/swapfile
          sudo swapon /mnt/swapfile

      - name: Mount Docker tmpfs
        if: inputs.runner == 'self-hosted'
        shell: bash
        run: |
          if [ ! -d "/var/lib/docker" ]; then
            echo "Directory '/var/lib/docker' not found"
            exit 1
          fi
          sudo mount -t tmpfs -o size=10G tmpfs /var/lib/docker
          sudo systemctl restart docker
          sudo df -h | grep docker

      - name: Set env variables
        run: echo "TAG=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV

      - name: Add SHORT_SHA
        run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV

      - name: Login to Docker
        run: docker login -u "sondreb" -p "${{secrets.DOCKER_KEY}}"

      - name: Checkout project
        uses: actions/checkout@v4

      - name: Init repo for Dockerization
        run: docker/init.sh "$TAG"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        id: qemu

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3
        id: buildx

      - name: Cache Docker layers
        uses: actions/cache@v3
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and push Docker image
        run: |
          docker buildx build \
          --cache-from "type=local,src=/tmp/.buildx-cache" \
          --cache-to "type=local,dest=/tmp/.buildx-cache" \
          --platform linux/amd64,linux/arm64 \
          --tag blockcore/mempool-${{ inputs.service }}:$TAG \
          --tag blockcore/mempool-${{ inputs.service }}:latest \
          --build-context rustgbt=./rust \
          --build-context backend=./backend \
          --output "type=registry" ./${{ inputs.service }}/ \
          --build-arg commitHash=$SHORT_SHA
